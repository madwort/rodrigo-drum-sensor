from drum_sensor.tdoa import calculate_point

import numpy
import pytest

testdata = [
    ([0, 80, 125, 83], (-0.08199618647736903, 0.08692143585675399)),
    ([7, 4, 0, 4], (0.004566751345874217, -0.0045667513458737)),
    ([0, 82, 136, 82], (-0.10623391246350365, 0.10623391246351387)),
    ([0, 77, 124, 81], (-0.08218499505826882, 0.08871530707404185)),
    ([81, 0, 79, 117], (0.07723815321925999, 0.07392248026592782)),
    ([90, 0, 90, 124], (0.07832980953338092, 0.07832980953338092)),
    ([77, 0, 81, 120], (0.0765109989247526, 0.08304274142552162)),
    ([133, 82, 0, 82], (0.09840269371389346, -0.09840269371532345)),
    ([119, 87, 0, 91], (0.0785261993011436, -0.07098095162190782)),
    ([117, 89, 0, 91], (0.07533891044074259, -0.07136379917418237)),
    ([83, 135, 87, 0], (-0.10126799320721791, -0.09458298914842288)),
    ([86, 136, 87, 0], (-0.09840541965966135, -0.09673892198645997)),
    ([70, 117, 77, 0], (-0.08603283412602358, -0.07478580908218872)),
    ([87, 106, 36, 0], (-0.0392633947602687, -0.12557977453066305)),
    ([88, 23, 0, 74], (0.10498233546958241, -0.025556539981573347)),
    ([74, 60, 0, 37], (0.03090160796349531, -0.0653344477688675)),
    ([65, 8, 0, 83], (0.041761469703860465, -0.025412289298273678)),
    ([0, 17, 80, 70], (-0.01820749716817085, 0.09879170527924472)),
    ([15, 0, 60, 66], (0.012801872756658082, 0.07836258890834677)),
]


@pytest.mark.parametrize("time_deltas_samples,expected_point", testdata)
def test_calculate_point(time_deltas_samples, expected_point):
    speed = 82

    #  in m
    distance = 0.202

    x, y = calculate_point(time_deltas_samples, speed, distance)

    expected_x, expected_y = expected_point
    assert numpy.isclose(x, expected_x)
    assert numpy.isclose(y, expected_y)
